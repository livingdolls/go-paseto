// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/livingdolls/go-paseto/internal/core/port/service (interfaces: UserPortService)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	gomock "github.com/golang/mock/gomock"
	request "github.com/livingdolls/go-paseto/internal/core/model/request"
	response "github.com/livingdolls/go-paseto/internal/core/model/response"
	reflect "reflect"
)

// MockUserPortService is a mock of UserPortService interface
type MockUserPortService struct {
	ctrl     *gomock.Controller
	recorder *MockUserPortServiceMockRecorder
}

// MockUserPortServiceMockRecorder is the mock recorder for MockUserPortService
type MockUserPortServiceMockRecorder struct {
	mock *MockUserPortService
}

// NewMockUserPortService creates a new mock instance
func NewMockUserPortService(ctrl *gomock.Controller) *MockUserPortService {
	mock := &MockUserPortService{ctrl: ctrl}
	mock.recorder = &MockUserPortServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserPortService) EXPECT() *MockUserPortServiceMockRecorder {
	return m.recorder
}

// GetUser mocks base method
func (m *MockUserPortService) GetUser(arg0 *request.GetUserByIdRequest) (*response.GetUserByIdResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*response.GetUserByIdResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser
func (mr *MockUserPortServiceMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserPortService)(nil).GetUser), arg0)
}

// ListUsers mocks base method
func (m *MockUserPortService) ListUsers() (*[]response.RegisterUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUsers")
	ret0, _ := ret[0].(*[]response.RegisterUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUsers indicates an expected call of ListUsers
func (mr *MockUserPortServiceMockRecorder) ListUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUsers", reflect.TypeOf((*MockUserPortService)(nil).ListUsers))
}

// Register mocks base method
func (m *MockUserPortService) Register(arg0 *request.RegisterUserRequest) (*response.RegisterUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0)
	ret0, _ := ret[0].(*response.RegisterUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register
func (mr *MockUserPortServiceMockRecorder) Register(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockUserPortService)(nil).Register), arg0)
}
